# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Fri Jan 26 17:07:16 2024
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'=='))